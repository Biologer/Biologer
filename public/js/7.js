(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[7],{

/***/ "./resources/js/mixins/FormMixin.js":
/*!******************************************!*\
  !*** ./resources/js/mixins/FormMixin.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var form_backend_validation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! form-backend-validation */ \"./node_modules/form-backend-validation/dist/index.js\");\n/* harmony import */ var form_backend_validation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(form_backend_validation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/pick */ \"./node_modules/lodash/pick.js\");\n/* harmony import */ var lodash_pick__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_pick__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/get */ \"./node_modules/lodash/get.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual */ \"./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'nzFieldObservationForm',\n  props: {\n    action: {\n      type: String,\n      required: true\n    },\n    method: {\n      type: String,\n      \"default\": 'POST'\n    },\n    redirectUrl: String,\n    cancelUrl: String,\n    submitMore: Boolean,\n    shouldConfirmSubmit: Boolean,\n    confirmSubmitMessage: {\n      type: String,\n      \"default\": function _default() {\n        return this.trans('You are about to submit');\n      }\n    },\n    shouldAskReason: Boolean,\n    shouldConfirmCancel: Boolean,\n    submitOnlyDirty: Boolean,\n    submitOnlyDirtyMessage: {\n      type: String,\n      \"default\": function _default() {\n        return this.trans('There are no changes, the data will not be saved.');\n      }\n    }\n  },\n  data: function data() {\n    return {\n      form: this.newForm(),\n      keepAfterSubmit: [],\n      submittingWithRedirect: false,\n      submittingWithoutRedirect: false,\n      confirmingSubmit: false,\n      confirmingCancel: false,\n      locale: window.App.locale\n    };\n  },\n  created: function created() {\n    document.addEventListener('keyup', this.registerKeyListener);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.removeEventListener('keyup', this.registerKeyListener);\n  },\n  methods: {\n    /**\n     * Create new form instance.\n     *\n     * @param  {Object} data default form data\n     * @return {Form}\n     */\n    newForm: function newForm() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new form_backend_validation__WEBPACK_IMPORTED_MODULE_0___default.a(data, {\n        resetOnSuccess: false\n      });\n    },\n\n    /**\n     * Keyboard shortcuts.\n     *\n     * @param {Event} e\n     */\n    registerKeyListener: function registerKeyListener(e) {\n      var enter = 13 === (e.which || e.keyCode);\n\n      if (e.ctrlKey && e.shiftKey && enter) {\n        this.submitMore && this.submitWithoutRedirect();\n      } else if (e.ctrlKey && enter) {\n        this.submitWithRedirect();\n      }\n    },\n\n    /**\n     * Confirm submit.\n     *\n     * @param {Function} onConfirm\n     */\n    confirmSubmit: function confirmSubmit(onConfirm) {\n      var _this = this;\n\n      if (this.confirmingSubmit) return;\n      this.confirmingSubmit = true;\n      var options = {\n        message: this.confirmSubmitMessage,\n        confirmText: this.trans('buttons.save'),\n        cancelText: this.trans('buttons.cancel'),\n        onConfirm: onConfirm,\n        onCancel: function onCancel() {\n          _this.confirmingSubmit = false;\n        }\n      };\n\n      if (!this.shouldAskReason) {\n        return this.$buefy.dialog.confirm(options);\n      }\n\n      return this.promptForReason(options);\n    },\n\n    /**\n     * Prompt the user for reason of change.\n     *\n     * @param  {Object} options\n     * @return {Vue}\n     */\n    promptForReason: function promptForReason(options) {\n      var _this2 = this;\n\n      var dialog = this.$buefy.dialog.prompt(_objectSpread({}, options, {\n        inputAttrs: {\n          placeholder: this.trans('Reason'),\n          required: true,\n          maxlength: 255\n        }\n      })); // Custom localized validation for the prompt input.\n\n      dialog.$nextTick(function () {\n        dialog.$refs.input.addEventListener('invalid', function (e) {\n          e.target.setCustomValidity('');\n\n          if (!e.target.validity.valid) {\n            e.target.setCustomValidity(_this2.trans('This field is required and can contain max 255 chars.'));\n          }\n        });\n        dialog.$refs.input.addEventListener('input', function (e) {\n          dialog.validationMessage = null;\n        });\n      });\n      return dialog;\n    },\n\n    /**\n     * Notify the user there are no changes.\n     */\n    notifyNoChanges: function notifyNoChanges() {\n      this.$buefy.toast.open({\n        message: this.submitOnlyDirtyMessage,\n        type: 'is-info'\n      });\n    },\n\n    /**\n     * Notify the user there are no changes and redirect.\n     */\n    notifyNoChangesAndRedirect: function notifyNoChangesAndRedirect() {\n      var _this3 = this;\n\n      this.notifyNoChanges();\n      setTimeout(function () {\n        if (_this3.redirectUrl) {\n          window.location.href = _this3.redirectUrl;\n        }\n      }, 500);\n    },\n\n    /**\n     * Submit the form with redirect.\n     */\n    submitWithRedirect: function submitWithRedirect() {\n      if (this.form.processing) return;\n      if (this.submitOnlyDirty && !this.isDirty()) return this.notifyNoChangesAndRedirect();\n      if (this.shouldConfirmSubmit) return this.confirmSubmit(this.performSubmitWithRedirect);\n      this.performSubmitWithRedirect();\n    },\n\n    /**\n     * Submit the form with redirect.\n     */\n    performSubmitWithRedirect: function performSubmitWithRedirect() {\n      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.submittingWithRedirect = true;\n      this.confirmingSubmit = false;\n\n      if (this.shouldAskReason) {\n        this.form.reason = reason;\n      }\n\n      this.form[this.method.toLowerCase()](this.action).then(this.onSuccessfulSubmitWithRedirect)[\"catch\"](this.onFailedSubmit);\n    },\n\n    /**\n     * Handle successful form submit with redirect.\n     */\n    onSuccessfulSubmitWithRedirect: function onSuccessfulSubmitWithRedirect() {\n      var _this4 = this;\n\n      this.form.processing = true;\n      this.$buefy.toast.open({\n        message: this.trans('Saved successfully'),\n        type: 'is-success'\n      }); // We want to wait a bit before we send the user to redirect route\n      // so we can show the message that the action was successful.\n\n      setTimeout(function () {\n        _this4.form.processing = false;\n        _this4.submittingWithRedirect = false;\n\n        _this4.hookAfterSubmitWithRedirect();\n\n        if (_this4.redirectUrl) {\n          window.location.href = _this4.redirectUrl;\n        }\n      }, 500);\n    },\n\n    /**\n     * Perform after submit with redirect is successful.\n     */\n    hookAfterSubmitWithRedirect: function hookAfterSubmitWithRedirect() {},\n\n    /**\n     * Submit the form and stay to add more.\n     */\n    submitWithoutRedirect: function submitWithoutRedirect() {\n      if (this.form.processing) return;\n      if (this.submitOnlyDirty && !this.isDirty()) return this.notifyNoChanges();\n      if (this.shouldConfirmSubmit) return this.confirmSubmit(this.performSubmitWithoutRedirect);\n      this.performSubmitWithoutRedirect();\n    },\n\n    /**\n     * Submit the form and stay to add more.\n     */\n    performSubmitWithoutRedirect: function performSubmitWithoutRedirect() {\n      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.submittingWithoutRedirect = true;\n      this.confirmingSubmit = false;\n\n      if (this.shouldAskReason) {\n        this.form.reason = reason;\n      }\n\n      this.form[this.method.toLowerCase()](this.action).then(this.onSuccessfulSubmitWithoutRedirect)[\"catch\"](this.onFailedSubmit);\n    },\n\n    /**\n     * Handle successful form submit with no redirect.\n     */\n    onSuccessfulSubmitWithoutRedirect: function onSuccessfulSubmitWithoutRedirect() {\n      this.submittingWithoutRedirect = false;\n      this.$buefy.toast.open({\n        message: this.trans('Saved successfully'),\n        type: 'is-success'\n      }); // Reset the form but remember some data.\n\n      var keep = lodash_pick__WEBPACK_IMPORTED_MODULE_1___default()(this.form.data(), this.keepAfterSubmit);\n\n      this.form.reset();\n      this.form.populate(keep);\n      this.hookAfterSubmitWithoutRedirect();\n    },\n\n    /**\n     * Perform after submit without redirect is successful.\n     */\n    hookAfterSubmitWithoutRedirect: function hookAfterSubmitWithoutRedirect() {},\n\n    /**\n     * Handle failed form submit.\n     *\n     * @param {Error} error\n     */\n    onFailedSubmit: function onFailedSubmit(error) {\n      this.submittingWithRedirect = false;\n      this.submittingWithoutRedirect = false;\n      this.$buefy.toast.open({\n        duration: 2500,\n        message: lodash_get__WEBPACK_IMPORTED_MODULE_2___default()(error, 'response.data.message', error.message),\n        type: 'is-danger'\n      });\n    },\n\n    /**\n     * Check if form is changed.\n     *\n     * @return {Boolean}\n     */\n    isDirty: function isDirty() {\n      return !lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default()(this.form.data(), this.form.initial);\n    },\n\n    /**\n     * Confirmation dialog for canceling.\n     */\n    confirmCancel: function confirmCancel() {\n      var _this5 = this;\n\n      if (this.confirmingCancel) return;\n      this.confirmingCancel = true;\n      this.$buefy.dialog.confirm({\n        message: this.trans('If you leave this page changes will not be saved.'),\n        onConfirm: function onConfirm() {\n          _this5.confirmingCancel = false;\n          window.location.href = _this5.cancelUrl;\n        },\n        onCancel: function onCancel() {\n          _this5.confirmingCancel = false;\n        },\n        cancelText: this.trans('buttons.stay_on_page'),\n        confirmText: this.trans('buttons.leave_page')\n      });\n    },\n\n    /**\n     * Handle cancel button/link.\n     *\n     * @param {Event} event\n     */\n    onCancel: function onCancel(event) {\n      if (this.shouldConfirmCancel && this.isDirty()) {\n        event.preventDefault();\n        this.confirmCancel();\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvbWl4aW5zL0Zvcm1NaXhpbi5qcz85YTRkIl0sIm5hbWVzIjpbIm5hbWUiLCJwcm9wcyIsImFjdGlvbiIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsIm1ldGhvZCIsInJlZGlyZWN0VXJsIiwiY2FuY2VsVXJsIiwic3VibWl0TW9yZSIsIkJvb2xlYW4iLCJzaG91bGRDb25maXJtU3VibWl0IiwiY29uZmlybVN1Ym1pdE1lc3NhZ2UiLCJ0cmFucyIsInNob3VsZEFza1JlYXNvbiIsInNob3VsZENvbmZpcm1DYW5jZWwiLCJzdWJtaXRPbmx5RGlydHkiLCJzdWJtaXRPbmx5RGlydHlNZXNzYWdlIiwiZGF0YSIsImZvcm0iLCJuZXdGb3JtIiwia2VlcEFmdGVyU3VibWl0Iiwic3VibWl0dGluZ1dpdGhSZWRpcmVjdCIsInN1Ym1pdHRpbmdXaXRob3V0UmVkaXJlY3QiLCJjb25maXJtaW5nU3VibWl0IiwiY29uZmlybWluZ0NhbmNlbCIsImxvY2FsZSIsIndpbmRvdyIsIkFwcCIsImNyZWF0ZWQiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZWdpc3RlcktleUxpc3RlbmVyIiwiYmVmb3JlRGVzdHJveSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJtZXRob2RzIiwiRm9ybSIsInJlc2V0T25TdWNjZXNzIiwiZSIsImVudGVyIiwid2hpY2giLCJrZXlDb2RlIiwiY3RybEtleSIsInNoaWZ0S2V5Iiwic3VibWl0V2l0aG91dFJlZGlyZWN0Iiwic3VibWl0V2l0aFJlZGlyZWN0IiwiY29uZmlybVN1Ym1pdCIsIm9uQ29uZmlybSIsIm9wdGlvbnMiLCJtZXNzYWdlIiwiY29uZmlybVRleHQiLCJjYW5jZWxUZXh0Iiwib25DYW5jZWwiLCIkYnVlZnkiLCJkaWFsb2ciLCJjb25maXJtIiwicHJvbXB0Rm9yUmVhc29uIiwicHJvbXB0IiwiaW5wdXRBdHRycyIsInBsYWNlaG9sZGVyIiwibWF4bGVuZ3RoIiwiJG5leHRUaWNrIiwiJHJlZnMiLCJpbnB1dCIsInRhcmdldCIsInNldEN1c3RvbVZhbGlkaXR5IiwidmFsaWRpdHkiLCJ2YWxpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwibm90aWZ5Tm9DaGFuZ2VzIiwidG9hc3QiLCJvcGVuIiwibm90aWZ5Tm9DaGFuZ2VzQW5kUmVkaXJlY3QiLCJzZXRUaW1lb3V0IiwibG9jYXRpb24iLCJocmVmIiwicHJvY2Vzc2luZyIsImlzRGlydHkiLCJwZXJmb3JtU3VibWl0V2l0aFJlZGlyZWN0IiwicmVhc29uIiwidG9Mb3dlckNhc2UiLCJ0aGVuIiwib25TdWNjZXNzZnVsU3VibWl0V2l0aFJlZGlyZWN0Iiwib25GYWlsZWRTdWJtaXQiLCJob29rQWZ0ZXJTdWJtaXRXaXRoUmVkaXJlY3QiLCJwZXJmb3JtU3VibWl0V2l0aG91dFJlZGlyZWN0Iiwib25TdWNjZXNzZnVsU3VibWl0V2l0aG91dFJlZGlyZWN0Iiwia2VlcCIsIl9waWNrIiwicmVzZXQiLCJwb3B1bGF0ZSIsImhvb2tBZnRlclN1Ym1pdFdpdGhvdXRSZWRpcmVjdCIsImVycm9yIiwiZHVyYXRpb24iLCJfZ2V0IiwiX2lzRXF1YWwiLCJpbml0aWFsIiwiY29uZmlybUNhbmNlbCIsImV2ZW50IiwicHJldmVudERlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBR2U7QUFDYkEsTUFBSSxFQUFFLHdCQURPO0FBR2JDLE9BQUssRUFBRTtBQUNMQyxVQUFNLEVBQUU7QUFDTkMsVUFBSSxFQUFFQyxNQURBO0FBRU5DLGNBQVEsRUFBRTtBQUZKLEtBREg7QUFNTEMsVUFBTSxFQUFFO0FBQ05ILFVBQUksRUFBRUMsTUFEQTtBQUVOLGlCQUFTO0FBRkgsS0FOSDtBQVdMRyxlQUFXLEVBQUVILE1BWFI7QUFZTEksYUFBUyxFQUFFSixNQVpOO0FBY0xLLGNBQVUsRUFBRUMsT0FkUDtBQWVMQyx1QkFBbUIsRUFBRUQsT0FmaEI7QUFnQkxFLHdCQUFvQixFQUFFO0FBQ3BC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TUFBWixDQUFtQkMsT0FBbkIsQ0FBMkI7QUFDekJOLGVBQU8sRUFBRSxLQUFLcEMsS0FBTCxDQUFXLG1EQUFYLENBRGdCO0FBRXpCa0MsaUJBQVMsRUFBRSxxQkFBTTtBQUNmLGdCQUFJLENBQUN0QixnQkFBTCxHQUF3QixLQUF4QjtBQUNBRSxnQkFBTSxDQUFDK0MsUUFBUCxDQUFnQkMsSUFBaEIsR0FBdUIsTUFBSSxDQUFDbkUsU0FBNUI7QUFDRCxTQUx3QjtBQU16QjRDLGdCQUFRLEVBQUUsb0JBQU07QUFBRSxnQkFBSSxDQUFDM0IsZ0JBQUwsR0FBd0IsS0FBeEI7QUFBK0IsU0FOeEI7QUFPekIwQixrQkFBVSxFQUFFLEtBQUt0QyxLQUFMLENBQVcsc0JBQVgsQ0FQYTtBQVF6QnFDLG1CQUFXLEVBQUUsS0FBS3JDLEtBQUwsQ0FBVyxvQkFBWDtBQVJZLE9BQTNCO0FBVUQsS0F6UU07O0FBMlFQOzs7OztBQUtBdUMsWUFoUk8sb0JBZ1JFOEMsS0FoUkYsRUFnUlM7QUFDZCxVQUFJLEtBQUtuRixtQkFBTCxJQUE0QixLQUFLOEQsT0FBTCxFQUFoQyxFQUFnRDtBQUM5Q3FCLGFBQUssQ0FBQ0MsY0FBTjtBQUVBLGFBQUtGLGFBQUw7QUFDRDtBQUNGO0FBdFJNO0FBeERJLENBQWYiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvbWl4aW5zL0Zvcm1NaXhpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGb3JtIGZyb20gJ2Zvcm0tYmFja2VuZC12YWxpZGF0aW9uJ1xuaW1wb3J0IF9waWNrIGZyb20gJ2xvZGFzaC9waWNrJ1xuaW1wb3J0IF9nZXQgZnJvbSAnbG9kYXNoL2dldCdcbmltcG9ydCBfaXNFcXVhbCBmcm9tICdsb2Rhc2gvaXNFcXVhbCdcblxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIG5hbWU6ICduekZpZWxkT2JzZXJ2YXRpb25Gb3JtJyxcblxuICBwcm9wczoge1xuICAgIGFjdGlvbjoge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuXG4gICAgbWV0aG9kOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnUE9TVCdcbiAgICB9LFxuXG4gICAgcmVkaXJlY3RVcmw6IFN0cmluZyxcbiAgICBjYW5jZWxVcmw6IFN0cmluZyxcblxuICAgIHN1Ym1pdE1vcmU6IEJvb2xlYW4sXG4gICAgc2hvdWxkQ29uZmlybVN1Ym1pdDogQm9vbGVhbixcbiAgICBjb25maXJtU3VibWl0TWVzc2FnZToge1xuICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgZGVmYXVsdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnMoJ1lvdSBhcmUgYWJvdXQgdG8gc3VibWl0JylcbiAgICAgIH1cbiAgICB9LFxuICAgIHNob3VsZEFza1JlYXNvbjogQm9vbGVhbixcbiAgICBzaG91bGRDb25maXJtQ2FuY2VsOiBCb29sZWFuLFxuICAgIHN1Ym1pdE9ubHlEaXJ0eTogQm9vbGVhbixcbiAgICBzdWJtaXRPbmx5RGlydHlNZXNzYWdlOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy50cmFucygnVGhlcmUgYXJlIG5vIGNoYW5nZXMsIHRoZSBkYXRhIHdpbGwgbm90IGJlIHNhdmVkLicpXG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZvcm06IHRoaXMubmV3Rm9ybSgpLFxuICAgICAga2VlcEFmdGVyU3VibWl0OiBbXSxcbiAgICAgIHN1Ym1pdHRpbmdXaXRoUmVkaXJlY3Q6IGZhbHNlLFxuICAgICAgc3VibWl0dGluZ1dpdGhvdXRSZWRpcmVjdDogZmFsc2UsXG4gICAgICBjb25maXJtaW5nU3VibWl0OiBmYWxzZSxcbiAgICAgIGNvbmZpcm1pbmdDYW5jZWw6IGZhbHNlLFxuICAgICAgbG9jYWxlOiB3aW5kb3cuQXBwLmxvY2FsZVxuICAgIH1cbiAgfSxcblxuICBjcmVhdGVkKCkge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5yZWdpc3RlcktleUxpc3RlbmVyKVxuICB9LFxuXG4gIGJlZm9yZURlc3Ryb3koKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLnJlZ2lzdGVyS2V5TGlzdGVuZXIpXG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBuZXcgZm9ybSBpbnN0YW5jZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAge09iamVjdH0gZGF0YSBkZWZhdWx0IGZvcm0gZGF0YVxuICAgICAqIEByZXR1cm4ge0Zvcm19XG4gICAgICovXG4gICAgbmV3Rm9ybShkYXRhID0ge30pIHtcbiAgICAgIHJldHVybiBuZXcgRm9ybShkYXRhLCB7XG4gICAgICAgIHJlc2V0T25TdWNjZXNzOiBmYWxzZVxuICAgICAgfSlcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogS2V5Ym9hcmQgc2hvcnRjdXRzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtFdmVudH0gZVxuICAgICAqL1xuICAgIHJlZ2lzdGVyS2V5TGlzdGVuZXIoZSkge1xuICAgICAgY29uc3QgZW50ZXIgPSAxMyA9PT0gKGUud2hpY2ggfHwgZS5rZXlDb2RlKVxuXG4gICAgICBpZiAoZS5jdHJsS2V5ICYmIGUuc2hpZnRLZXkgJiYgZW50ZXIpIHtcbiAgICAgICAgdGhpcy5zdWJtaXRNb3JlICYmIHRoaXMuc3VibWl0V2l0aG91dFJlZGlyZWN0KClcbiAgICAgIH0gZWxzZSBpZiAoZS5jdHJsS2V5ICYmIGVudGVyKSB7XG4gICAgICAgIHRoaXMuc3VibWl0V2l0aFJlZGlyZWN0KClcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ29uZmlybSBzdWJtaXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBvbkNvbmZpcm1cbiAgICAgKi9cbiAgICBjb25maXJtU3VibWl0KG9uQ29uZmlybSkge1xuICAgICAgaWYgKHRoaXMuY29uZmlybWluZ1N1Ym1pdCkgcmV0dXJuXG5cbiAgICAgIHRoaXMuY29uZmlybWluZ1N1Ym1pdCA9IHRydWVcblxuICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgbWVzc2FnZTogdGhpcy5jb25maXJtU3VibWl0TWVzc2FnZSxcbiAgICAgICAgY29uZmlybVRleHQ6IHRoaXMudHJhbnMoJ2J1dHRvbnMuc2F2ZScpLFxuICAgICAgICBjYW5jZWxUZXh0OiB0aGlzLnRyYW5zKCdidXR0b25zLmNhbmNlbCcpLFxuICAgICAgICBvbkNvbmZpcm0sXG4gICAgICAgIG9uQ2FuY2VsOiAoKSA9PiB7IHRoaXMuY29uZmlybWluZ1N1Ym1pdCA9IGZhbHNlIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnNob3VsZEFza1JlYXNvbikge1xuICAgICAgICByZXR1cm4gdGhpcy4kYnVlZnkuZGlhbG9nLmNvbmZpcm0ob3B0aW9ucylcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMucHJvbXB0Rm9yUmVhc29uKG9wdGlvbnMpXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFByb21wdCB0aGUgdXNlciBmb3IgcmVhc29uIG9mIGNoYW5nZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9uc1xuICAgICAqIEByZXR1cm4ge1Z1ZX1cbiAgICAgKi9cbiAgICBwcm9tcHRGb3JSZWFzb24ob3B0aW9ucykge1xuICAgICAgY29uc3QgZGlhbG9nID0gdGhpcy4kYnVlZnkuZGlhbG9nLnByb21wdCh7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGlucHV0QXR0cnM6IHtcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiB0aGlzLnRyYW5zKCdSZWFzb24nKSxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgbWF4bGVuZ3RoOiAyNTVcbiAgICAgICAgfVxuICAgICAgfSlcblxuICAgICAgLy8gQ3VzdG9tIGxvY2FsaXplZCB2YWxpZGF0aW9uIGZvciB0aGUgcHJvbXB0IGlucHV0LlxuICAgICAgZGlhbG9nLiRuZXh0VGljaygoKSA9PiB7XG4gICAgICAgIGRpYWxvZy4kcmVmcy5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnZhbGlkJywgKGUpID0+IHtcbiAgICAgICAgICBlLnRhcmdldC5zZXRDdXN0b21WYWxpZGl0eSgnJylcblxuICAgICAgICAgIGlmICghZS50YXJnZXQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgICAgICAgIGUudGFyZ2V0LnNldEN1c3RvbVZhbGlkaXR5KHRoaXMudHJhbnMoJ1RoaXMgZmllbGQgaXMgcmVxdWlyZWQgYW5kIGNhbiBjb250YWluIG1heCAyNTUgY2hhcnMuJykpXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIGRpYWxvZy4kcmVmcy5pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIChlKSA9PiB7XG4gICAgICAgICAgZGlhbG9nLnZhbGlkYXRpb25NZXNzYWdlID0gbnVsbFxuICAgICAgICB9KVxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIGRpYWxvZ1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBOb3RpZnkgdGhlIHVzZXIgdGhlcmUgYXJlIG5vIGNoYW5nZXMuXG4gICAgICovXG4gICAgbm90aWZ5Tm9DaGFuZ2VzKCkge1xuICAgICAgdGhpcy4kYnVlZnkudG9hc3Qub3Blbih7XG4gICAgICAgIG1lc3NhZ2U6IHRoaXMuc3VibWl0T25seURpcnR5TWVzc2FnZSxcbiAgICAgICAgdHlwZTogJ2lzLWluZm8nXG4gICAgICB9KVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBOb3RpZnkgdGhlIHVzZXIgdGhlcmUgYXJlIG5vIGNoYW5nZXMgYW5kIHJlZGlyZWN0LlxuICAgICAqL1xuICAgIG5vdGlmeU5vQ2hhbmdlc0FuZFJlZGlyZWN0KCkge1xuICAgICAgdGhpcy5ub3RpZnlOb0NoYW5nZXMoKVxuXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucmVkaXJlY3RVcmwpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHRoaXMucmVkaXJlY3RVcmxcbiAgICAgICAgfVxuICAgICAgfSwgNTAwKVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTdWJtaXQgdGhlIGZvcm0gd2l0aCByZWRpcmVjdC5cbiAgICAgKi9cbiAgICBzdWJtaXRXaXRoUmVkaXJlY3QoKSB7XG4gICAgICBpZiAodGhpcy5mb3JtLnByb2Nlc3NpbmcpIHJldHVyblxuXG4gICAgICBpZiAodGhpcy5zdWJtaXRPbmx5RGlydHkgJiYgIXRoaXMuaXNEaXJ0eSgpKSByZXR1cm4gdGhpcy5ub3RpZnlOb0NoYW5nZXNBbmRSZWRpcmVjdCgpXG5cbiAgICAgIGlmICh0aGlzLnNob3VsZENvbmZpcm1TdWJtaXQpIHJldHVybiB0aGlzLmNvbmZpcm1TdWJtaXQodGhpcy5wZXJmb3JtU3VibWl0V2l0aFJlZGlyZWN0KVxuXG4gICAgICB0aGlzLnBlcmZvcm1TdWJtaXRXaXRoUmVkaXJlY3QoKVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTdWJtaXQgdGhlIGZvcm0gd2l0aCByZWRpcmVjdC5cbiAgICAgKi9cbiAgICBwZXJmb3JtU3VibWl0V2l0aFJlZGlyZWN0KHJlYXNvbiA9IG51bGwpIHtcbiAgICAgIHRoaXMuc3VibWl0dGluZ1dpdGhSZWRpcmVjdCA9IHRydWVcbiAgICAgIHRoaXMuY29uZmlybWluZ1N1Ym1pdCA9IGZhbHNlXG5cbiAgICAgIGlmICh0aGlzLnNob3VsZEFza1JlYXNvbikge1xuICAgICAgICB0aGlzLmZvcm0ucmVhc29uID0gcmVhc29uXG4gICAgICB9XG5cbiAgICAgIHRoaXMuZm9ybVt0aGlzLm1ldGhvZC50b0xvd2VyQ2FzZSgpXSh0aGlzLmFjdGlvbilcbiAgICAgICAgICAudGhlbih0aGlzLm9uU3VjY2Vzc2Z1bFN1Ym1pdFdpdGhSZWRpcmVjdClcbiAgICAgICAgICAuY2F0Y2godGhpcy5vbkZhaWxlZFN1Ym1pdClcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIHN1Y2Nlc3NmdWwgZm9ybSBzdWJtaXQgd2l0aCByZWRpcmVjdC5cbiAgICAgKi9cbiAgICBvblN1Y2Nlc3NmdWxTdWJtaXRXaXRoUmVkaXJlY3QoKSB7XG4gICAgICB0aGlzLmZvcm0ucHJvY2Vzc2luZyA9IHRydWVcblxuICAgICAgdGhpcy4kYnVlZnkudG9hc3Qub3Blbih7XG4gICAgICAgIG1lc3NhZ2U6IHRoaXMudHJhbnMoJ1NhdmVkIHN1Y2Nlc3NmdWxseScpLFxuICAgICAgICB0eXBlOiAnaXMtc3VjY2VzcydcbiAgICAgIH0pXG5cbiAgICAgIC8vIFdlIHdhbnQgdG8gd2FpdCBhIGJpdCBiZWZvcmUgd2Ugc2VuZCB0aGUgdXNlciB0byByZWRpcmVjdCByb3V0ZVxuICAgICAgLy8gc28gd2UgY2FuIHNob3cgdGhlIG1lc3NhZ2UgdGhhdCB0aGUgYWN0aW9uIHdhcyBzdWNjZXNzZnVsLlxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuZm9ybS5wcm9jZXNzaW5nID0gZmFsc2VcbiAgICAgICAgdGhpcy5zdWJtaXR0aW5nV2l0aFJlZGlyZWN0ID0gZmFsc2VcblxuICAgICAgICB0aGlzLmhvb2tBZnRlclN1Ym1pdFdpdGhSZWRpcmVjdCgpXG5cbiAgICAgICAgaWYgKHRoaXMucmVkaXJlY3RVcmwpIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHRoaXMucmVkaXJlY3RVcmxcbiAgICAgICAgfVxuICAgICAgfSwgNTAwKVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBQZXJmb3JtIGFmdGVyIHN1Ym1pdCB3aXRoIHJlZGlyZWN0IGlzIHN1Y2Nlc3NmdWwuXG4gICAgICovXG4gICAgaG9va0FmdGVyU3VibWl0V2l0aFJlZGlyZWN0KCkge30sXG5cbiAgICAvKipcbiAgICAgKiBTdWJtaXQgdGhlIGZvcm0gYW5kIHN0YXkgdG8gYWRkIG1vcmUuXG4gICAgICovXG4gICAgc3VibWl0V2l0aG91dFJlZGlyZWN0KCkge1xuICAgICAgaWYgKHRoaXMuZm9ybS5wcm9jZXNzaW5nKSByZXR1cm5cblxuICAgICAgaWYgKHRoaXMuc3VibWl0T25seURpcnR5ICAmJiAhdGhpcy5pc0RpcnR5KCkpIHJldHVybiB0aGlzLm5vdGlmeU5vQ2hhbmdlcygpXG5cbiAgICAgIGlmICh0aGlzLnNob3VsZENvbmZpcm1TdWJtaXQpIHJldHVybiB0aGlzLmNvbmZpcm1TdWJtaXQodGhpcy5wZXJmb3JtU3VibWl0V2l0aG91dFJlZGlyZWN0KVxuXG4gICAgICB0aGlzLnBlcmZvcm1TdWJtaXRXaXRob3V0UmVkaXJlY3QoKVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTdWJtaXQgdGhlIGZvcm0gYW5kIHN0YXkgdG8gYWRkIG1vcmUuXG4gICAgICovXG4gICAgcGVyZm9ybVN1Ym1pdFdpdGhvdXRSZWRpcmVjdChyZWFzb24gPSBudWxsKSB7XG4gICAgICB0aGlzLnN1Ym1pdHRpbmdXaXRob3V0UmVkaXJlY3QgPSB0cnVlXG4gICAgICB0aGlzLmNvbmZpcm1pbmdTdWJtaXQgPSBmYWxzZVxuXG4gICAgICBpZiAodGhpcy5zaG91bGRBc2tSZWFzb24pIHtcbiAgICAgICAgdGhpcy5mb3JtLnJlYXNvbiA9IHJlYXNvblxuICAgICAgfVxuXG4gICAgICB0aGlzLmZvcm1bdGhpcy5tZXRob2QudG9Mb3dlckNhc2UoKV0odGhpcy5hY3Rpb24pXG4gICAgICAgICAgLnRoZW4odGhpcy5vblN1Y2Nlc3NmdWxTdWJtaXRXaXRob3V0UmVkaXJlY3QpXG4gICAgICAgICAgLmNhdGNoKHRoaXMub25GYWlsZWRTdWJtaXQpXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEhhbmRsZSBzdWNjZXNzZnVsIGZvcm0gc3VibWl0IHdpdGggbm8gcmVkaXJlY3QuXG4gICAgICovXG4gICAgb25TdWNjZXNzZnVsU3VibWl0V2l0aG91dFJlZGlyZWN0KCkge1xuICAgICAgdGhpcy5zdWJtaXR0aW5nV2l0aG91dFJlZGlyZWN0ID0gZmFsc2VcblxuICAgICAgdGhpcy4kYnVlZnkudG9hc3Qub3Blbih7XG4gICAgICAgIG1lc3NhZ2U6IHRoaXMudHJhbnMoJ1NhdmVkIHN1Y2Nlc3NmdWxseScpLFxuICAgICAgICB0eXBlOiAnaXMtc3VjY2VzcydcbiAgICAgIH0pXG5cbiAgICAgIC8vIFJlc2V0IHRoZSBmb3JtIGJ1dCByZW1lbWJlciBzb21lIGRhdGEuXG4gICAgICBjb25zdCBrZWVwID0gX3BpY2sodGhpcy5mb3JtLmRhdGEoKSwgdGhpcy5rZWVwQWZ0ZXJTdWJtaXQpXG4gICAgICB0aGlzLmZvcm0ucmVzZXQoKVxuICAgICAgdGhpcy5mb3JtLnBvcHVsYXRlKGtlZXApXG5cbiAgICAgIHRoaXMuaG9va0FmdGVyU3VibWl0V2l0aG91dFJlZGlyZWN0KClcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybSBhZnRlciBzdWJtaXQgd2l0aG91dCByZWRpcmVjdCBpcyBzdWNjZXNzZnVsLlxuICAgICAqL1xuICAgIGhvb2tBZnRlclN1Ym1pdFdpdGhvdXRSZWRpcmVjdCgpIHt9LFxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIGZhaWxlZCBmb3JtIHN1Ym1pdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXJyb3J9IGVycm9yXG4gICAgICovXG4gICAgb25GYWlsZWRTdWJtaXQoZXJyb3IpIHtcbiAgICAgIHRoaXMuc3VibWl0dGluZ1dpdGhSZWRpcmVjdCA9IGZhbHNlXG4gICAgICB0aGlzLnN1Ym1pdHRpbmdXaXRob3V0UmVkaXJlY3QgPSBmYWxzZVxuXG4gICAgICB0aGlzLiRidWVmeS50b2FzdC5vcGVuKHtcbiAgICAgICAgZHVyYXRpb246IDI1MDAsXG4gICAgICAgIG1lc3NhZ2U6IF9nZXQoZXJyb3IsICdyZXNwb25zZS5kYXRhLm1lc3NhZ2UnLCBlcnJvci5tZXNzYWdlKSxcbiAgICAgICAgdHlwZTogJ2lzLWRhbmdlcidcbiAgICAgIH0pXG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGZvcm0gaXMgY2hhbmdlZC5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAgICovXG4gICAgaXNEaXJ0eSgpIHtcbiAgICAgIHJldHVybiAhIF9pc0VxdWFsKHRoaXMuZm9ybS5kYXRhKCksIHRoaXMuZm9ybS5pbml0aWFsKVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDb25maXJtYXRpb24gZGlhbG9nIGZvciBjYW5jZWxpbmcuXG4gICAgICovXG4gICAgY29uZmlybUNhbmNlbCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbmZpcm1pbmdDYW5jZWwpIHJldHVyblxuXG4gICAgICB0aGlzLmNvbmZpcm1pbmdDYW5jZWwgPSB0cnVlXG5cbiAgICAgIHRoaXMuJGJ1ZWZ5LmRpYWxvZy5jb25maXJtKHtcbiAgICAgICAgbWVzc2FnZTogdGhpcy50cmFucygnSWYgeW91IGxlYXZlIHRoaXMgcGFnZSBjaGFuZ2VzIHdpbGwgbm90IGJlIHNhdmVkLicpLFxuICAgICAgICBvbkNvbmZpcm06ICgpID0+IHtcbiAgICAgICAgICB0aGlzLmNvbmZpcm1pbmdDYW5jZWwgPSBmYWxzZVxuICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdGhpcy5jYW5jZWxVcmxcbiAgICAgICAgfSxcbiAgICAgICAgb25DYW5jZWw6ICgpID0+IHsgdGhpcy5jb25maXJtaW5nQ2FuY2VsID0gZmFsc2UgfSxcbiAgICAgICAgY2FuY2VsVGV4dDogdGhpcy50cmFucygnYnV0dG9ucy5zdGF5X29uX3BhZ2UnKSxcbiAgICAgICAgY29uZmlybVRleHQ6IHRoaXMudHJhbnMoJ2J1dHRvbnMubGVhdmVfcGFnZScpLFxuICAgICAgfSlcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSGFuZGxlIGNhbmNlbCBidXR0b24vbGluay5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RXZlbnR9IGV2ZW50XG4gICAgICovXG4gICAgb25DYW5jZWwoZXZlbnQpIHtcbiAgICAgIGlmICh0aGlzLnNob3VsZENvbmZpcm1DYW5jZWwgJiYgdGhpcy5pc0RpcnR5KCkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuXG4gICAgICAgIHRoaXMuY29uZmlybUNhbmNlbCgpXG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/mixins/FormMixin.js\n");

/***/ })

}]);