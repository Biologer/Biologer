{"version":3,"file":"js/35db516789acf913.js","mappings":"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","sources":["webpack:///resources/js/components/tables/TaxonomyTable.vue","webpack:///./resources/js/components/tables/TaxonomyTable.vue?e258","webpack:///./resources/js/components/tables/TaxonomyTable.vue?3d3d","webpack:///./resources/js/components/tables/TaxonomyTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"taxonomy-table\">\r\n\r\n    <div>\r\n      Simple tools for testing. More will be added/modified later ...\r\n    </div>\r\n\r\n    <hr>\r\n    <button type=\"button\" class=\"button is-info\" @click=\"checkConnection\">Check</button>\r\n    Check connection to Taxonomy base.\r\n    <br>\r\n    <b>Response:</b> {{ check }}\r\n    <hr>\r\n    <button type=\"button\" class=\"button is-success\" @click=\"connectTaxonomy\">Connect</button>\r\n    If connected, this Biologer database will receive updates from Taxonomy base as soon they are available.\r\n    Connecting will also send info about legislation's and red lists to Taxonomy base, to be in sync.<br>\r\n    <b>Response:</b> {{ connect }}\r\n    <hr>\r\n    <button type=\"button\" class=\"button is-danger\" @click=\"disconnectTaxonomy\">Disconnect</button>\r\n    If disconnected, this Biologer database will NOT receive any updates from taxonomy base. All ID's connected to\r\n    Taxonomy base will be erased!<br>\r\n    <b>Response:</b> {{ disconnect }}\r\n    <hr>\r\n    <button type=\"button\" class=\"button is-primary\" @click=\"syncTaxonomy\">Sync all taxa</button>\r\n    Search for all taxa that are not already updated with Taxonomy base.<br>\r\n    <b>Response:</b> {{ sync }}\r\n    <hr>\r\n    Synced: {{ synced }}\r\n    Not synced: {{ not_synced }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TaxonomyTable\",\r\n\r\n  data() {\r\n    return {\r\n      check: null,\r\n      connect: null,\r\n      disconnect: null,\r\n      sync: null,\r\n    }\r\n  },\r\n\r\n  props: {\r\n    checkRoute: String,\r\n    connectRoute: String,\r\n    disconnectRoute: String,\r\n    syncRoute: String,\r\n\r\n    synced: String,\r\n    not_synced: String,\r\n  },\r\n\r\n  methods: {\r\n    checkConnection () {\r\n      return axios\r\n        .get(route(this.checkRoute))\r\n        .then(response => (this.check = response.data))\r\n        .catch(error => console.log(error));\r\n    },\r\n\r\n    connectTaxonomy () {\r\n      return axios\r\n        .get(route(this.connectRoute))\r\n        .then(response => (this.connect = response.data))\r\n        .catch(error => console.log(error));\r\n    },\r\n\r\n    disconnectTaxonomy () {\r\n      if(confirm(\"Do you really want to disconnect?\")) {\r\n        return axios\r\n          .get(route(this.disconnectRoute))\r\n          .then(response => (this.disconnect = response.data))\r\n          .catch(error => console.log(error));\r\n      }\r\n    },\r\n\r\n    syncTaxonomy () {\r\n      this.sync = \"Syncing... This will take a while, and will *fail* a lot, almost every ~3000 taxa... No progress bar yet.\"\r\n      return axios\r\n        .get(route(this.syncRoute))\r\n        .then(response => (this.sync = response.data))\r\n        .catch(error => console.log(error));\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaxonomyTable.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TaxonomyTable.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TaxonomyTable.vue?vue&type=template&id=67a0b294&scoped=true\"\nimport script from \"./TaxonomyTable.vue?vue&type=script&lang=js\"\nexport * from \"./TaxonomyTable.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"67a0b294\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"taxonomy-table\"},[_c('div',[_vm._v(\"\\n    Simple tools for testing. More will be added/modified later ...\\n  \")]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('button',{staticClass:\"button is-info\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.checkConnection}},[_vm._v(\"Check\")]),_vm._v(\"\\n  Check connection to Taxonomy base.\\n  \"),_c('br'),_vm._v(\" \"),_c('b',[_vm._v(\"Response:\")]),_vm._v(\" \"+_vm._s(_vm.check)+\"\\n  \"),_c('hr'),_vm._v(\" \"),_c('button',{staticClass:\"button is-success\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.connectTaxonomy}},[_vm._v(\"Connect\")]),_vm._v(\"\\n  If connected, this Biologer database will receive updates from Taxonomy base as soon they are available.\\n  Connecting will also send info about legislation's and red lists to Taxonomy base, to be in sync.\"),_c('br'),_vm._v(\" \"),_c('b',[_vm._v(\"Response:\")]),_vm._v(\" \"+_vm._s(_vm.connect)+\"\\n  \"),_c('hr'),_vm._v(\" \"),_c('button',{staticClass:\"button is-danger\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.disconnectTaxonomy}},[_vm._v(\"Disconnect\")]),_vm._v(\"\\n  If disconnected, this Biologer database will NOT receive any updates from taxonomy base. All ID's connected to\\n  Taxonomy base will be erased!\"),_c('br'),_vm._v(\" \"),_c('b',[_vm._v(\"Response:\")]),_vm._v(\" \"+_vm._s(_vm.disconnect)+\"\\n  \"),_c('hr'),_vm._v(\" \"),_c('button',{staticClass:\"button is-primary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.syncTaxonomy}},[_vm._v(\"Sync all taxa\")]),_vm._v(\"\\n  Search for all taxa that are not already updated with Taxonomy base.\"),_c('br'),_vm._v(\" \"),_c('b',[_vm._v(\"Response:\")]),_vm._v(\" \"+_vm._s(_vm.sync)+\"\\n  \"),_c('hr'),_vm._v(\"\\n  Synced: \"+_vm._s(_vm.synced)+\"\\n  Not synced: \"+_vm._s(_vm.not_synced)+\"\\n\")])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"names":["name","data","check","connect","disconnect","sync","props","checkRoute","String","connectRoute","disconnectRoute","syncRoute","synced","not_synced","methods","checkConnection","_this","axios","get","route","then","response","error","console","log","connectTaxonomy","_this2","disconnectTaxonomy","_this3","confirm","syncTaxonomy","_this4","_vm","this","_c","_self","staticClass","_v","attrs","on","_s"],"sourceRoot":""}